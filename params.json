{
  "name": "AMIDST Toolbox",
  "tagline": "A Java Toolbox for Scalable Probabilistic Machine Learning",
  "body": "# Description<a name=\"Description\"></a>\r\n\r\n## Probabilistic Machine Learning\r\n\r\n\r\n<p align=\"center\">\r\n<img title=\"PGM\" src=\"https://amidst.github.io/toolbox/docs/web/figs/pgm-crop.pdf\" width=\"500\">\r\n</p>\r\n\r\n\r\nModel your problem using a flexible probabilistic language based on graphical models. \r\nThen, fit it with data using a Bayesian approach to handle modelling uncertainty.\r\n\r\n## Multi-core and distributed processing\r\n\r\n<p align=\"center\">\r\n<img title=\"Taxonomy\" src=\"https://amidst.github.io/toolbox/docs/cluster.png\" width=\"500\">\r\n</p>\r\n\r\nAMIDST provides tailored parallel and distributed implementations of Bayesian parameter \r\nlearning for batch and streaming data. This processing is based on flexible and scalable \r\nmessage passing algorithms.\r\n\r\n#Features<a name=\"features\"></a>\r\n\r\n* Probabilistic Graphical Models: Specify your model using probabilistic graphical models with latent variables\r\nand temporal dependencies.\r\n\r\n* Scalable inference: Perform inference on your probabilistic models with powerful approximate and\r\nscalable algorithms.\r\n\r\n* Data Streams: Update your models when new data is available. This makes our toolbox \r\nappropriate for learning from (massive) data streams.\r\n\r\n* Large-scale Data: Use your defined models to process massive data sets in a distributed \r\ncomputer cluster using Flink or Spark. \r\n\r\n\r\n* Extensible: Code your models or algorithms within AMiDST and expand the toolbox functionalities. \r\nFlexible toolbox for researchers performing their experimentation in machine learning.\r\n\r\n* Interoperability: Leverage existing functionalities and algorithms by interfacing \r\nto other software tools such as Hugin, MOA, Weka, R, etc.\r\n\r\n\r\n#Simple Example<a name=\"example\"></a>\r\n\r\n\r\n#Real-World Uses Cases<a name=\"uses\"></a>\r\n\r\n## Risk prediction in credit operations\r\n\r\n\r\n<p align=\"center\">\r\n<img title=\"PGM\" src=\"https://amidst.github.io/toolbox/docs/web/figs/creditcard-crop.pdf\" width=\"500\">\r\n</p>\r\n\r\nAMIDST Toolbox has been used to track concept drift and do risk prediction in credit operations, \r\nand as data is collected continuously and reported on a daily basis, this gives rise to a streaming data \r\nclassification problem. This work has been performed in collaboration with one of our partners, \r\nthe Spanish bank BCC. It is expected to be into production at the beginning of 2017.\r\n\r\n\r\n## Recognition of traffic maneuvers\r\n\r\n<p align=\"center\">\r\n<img title=\"PGM\" src=\"https://amidst.github.io/toolbox/docs/web/figs/cars-crop.pdf\" width=\"500\">\r\n</p>\r\n\r\nAMIDST Toolbox has been used to prototype models for early recognition of traffic maneuver \r\nintentions. Similarly to the previous case, data is continuously collected by car on-board \r\nsensors giving rise to a large and quickly evolving data stream. This work has been performed \r\nin collaboration with one of our partners, DAIMLER. \r\n\r\n#Team\r\n\r\n\r\n\r\n# Documentation<a name=\"documentation\"></a>\r\n\r\n* [Getting Started!](http://amidst.github.io/toolbox/GettingStarted.html) explains how to\r\ninstall the AMIDST toolbox, how this toolbox makes use of Java 8 new functional style programming\r\nfeatures, and why it is based on a module based architecture.\r\n\r\n* [Toolbox Functionalities](http://amidst.github.io/toolbox/ToolboxFunctionalities.html) describes\r\nthe main functionalities (i.e., data streams, BNs, DBNs, static and dynamic learning and inference\r\nengines, etc.) of the AMIDST toolbox.\r\n\r\n* [Bayesian networks: Code Examples](http://amidst.github.io/toolbox/CodeExamples.html) includes\r\na list of source code examples explaining how to use some functionalities of the AMIDST toolbox.\r\n\r\n* [Dynamic Bayesian networks: Code Examples](http://amidst.github.io/toolbox/DynamicCodeExamples.html)\r\nincludes some source code examples of functionalities related to Dynamic Bayesian networks.\r\n\r\n* [FlinkLink](http://amidst.github.io/toolbox/examples/flinklink.html): Code Examples includes some \r\nsource code examples of functionalities related to the module that integrates Apache Flink with AMIDST.\r\n\r\n* [API JavaDoc](http://amidst.github.io/toolbox/javadoc/index.html) of the AMIDST toolbox. \r\n\r\n\r\n# Scalability\r\n\r\n## Multi-Core Scalablity using Java 8 Streams\r\n\r\nScalability is a main concern for the AMIDST toolbox. Java 8 functional programming style is used to\r\nprovide parallel implementations of the algorithms. If more computation capacity is needed to process\r\ndata streams, AMIDST users can also use more CPU cores. As an example, the following figure shows how\r\nthe data processing capacity of our toolbox increases given the number of CPU cores when learning an\r\nhybrid BN model (including a class variable C, two latent variables (dashed nodes), multinomial\r\n(blue nodes) and Gaussian (green nodes) observable variables) using the AMIDST's learning engine.\r\nAs can be seen, using our variational learning engine, AMIDST toolbox is able to process data in the order\r\nof gigabytes (GB) per hour depending on the number of available CPU cores with large and complex PGMs with\r\nlatent variables. Note that, these experiments were carried out on a Ubuntu Linux server with a x86_64\r\narchitecture and 32 cores. The size of the processed data set was measured according to the\r\n[Weka](www.cs.waikato.ac.nz/ml/weka/)'s ARFF format.\r\n\r\n<p align=\"center\">\r\n<img src=\"https://amidst.github.io/toolbox/docs/scalability.png\" width=\"800\">\r\n</p>\r\n\r\n\r\n## Distributed Scalablity using [Apache Flink](http://flink.com)\r\n\r\nScalability is a main concern for the AMIDST toolbox. Java 8 functional programming style is used to\r\nprovide parallel implementations of the algorithms. If more computation capacity is needed to process\r\ndata streams, AMIDST users can also use more CPU cores. As an example, the following figure shows how\r\nthe data processing capacity of our toolbox increases given the number of CPU cores when learning an\r\nhybrid BN model (including a class variable C, two latent variables (dashed nodes), multinomial\r\n(blue nodes) and Gaussian (green nodes) observable variables) using the AMIDST's learning engine.\r\nAs can be seen, using our variational learning engine, AMIDST toolbox is able to process data in the order\r\nof gigabytes (GB) per hour depending on the number of available CPU cores with large and complex PGMs with\r\nlatent variables. Note that, these experiments were carried out on a Ubuntu Linux server with a x86_64\r\narchitecture and 32 cores. The size of the processed data set was measured according to the\r\n[Weka](www.cs.waikato.ac.nz/ml/weka/)'s ARFF format.\r\n\r\n<p align=\"center\">\r\n<img src=\"https://amidst.github.io/toolbox/docs/scalability.png\" width=\"800\">\r\n</p>\r\n\r\n\r\n\r\n# Publications & Use-Cases\r\n\r\nThe following repository [https://github.com/amidst/toolbox-usecases](https://github.com/amidst/toolbox-usecases)\r\ncontains the source code and details about the publications and use-cases using the AMIDST toolbox.\r\n\r\n# Upcoming Developments\r\n\r\nThe AMIDST toolbox is an expanding project and upcoming developments include for instance the ongoing\r\nintegration of the toolbox in [Spark](http://spark.apache.org) to enlarge its scalability capacities.\r\nIn addition, a new link to [R](http://static.amidst.eu/upload/dokumenter/Posters/PosterUseR.pdf)\r\nis still in progress which will expand the AMIDST user-base.\r\n\r\n# Contributing to AMIDST\r\n\r\nAMIDST is an open source toolbox and the end-users are encouraged to upload their\r\ncontributions (which may include basic contributions, major extensions, and/or use-cases)\r\nfollowing the indications given in this [link](http://amidst.github.io/toolbox/ContributingToAMIDST.html).\r\n",
  "google": "UA-66233470-1",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}